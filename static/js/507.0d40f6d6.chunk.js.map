{"version":3,"file":"static/js/507.0d40f6d6.chunk.js","mappings":"qPAIA,MAeA,EAfkBA,KAEVC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKC,EAAUC,IAAI,cACxBN,EAAAA,EAAAA,MAAA,OAAKC,UAAU,mBAAkBC,SAAA,CAAC,0BACRC,EAAAA,EAAAA,KAAA,SAAK,kBAG/BA,EAAAA,EAAAA,KAAA,OAAKC,IAAKG,EAAcD,IAAI,oB,kICAxC,MA2CME,EAAOC,IAAuB,IAADC,EAAA,IAArB,KAACC,EAAI,SAAEC,GAASH,EAC1B,MAAM,KAACI,EAAI,YAAEC,EAAW,UAAEC,GAAcJ,EAClCK,GAAmB,OAARJ,QAAQ,IAARA,GAAe,QAAPF,EAARE,EAAUK,aAAK,IAAAP,OAAP,EAARA,EAAiBQ,OAAQ,IAG1C,OAFAC,QAAQC,IAAI,YAAaJ,IAGrBhB,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAAnB,SAAA,EACIF,EAAAA,EAAAA,MAACsB,EAAAA,EAAM,CAAApB,SAAA,EACHC,EAAAA,EAAAA,KAAA,QACIU,KAAK,cACLU,QAAS,GAAGV,iBAEhBV,EAAAA,EAAAA,KAAA,SAAAD,SAAQW,QAEZV,EAAAA,EAAAA,KAACJ,EAAAA,EAAS,KACVC,EAAAA,EAAAA,MAAA,OAAKC,UAAU,cAAaC,SAAA,EACxBC,EAAAA,EAAAA,KAAA,OAAKC,IAAKW,EAAWT,IAAKO,EAAMZ,UAAU,sBAC1CD,EAAAA,EAAAA,MAAA,OAAKC,UAAU,oBAAmBC,SAAA,EAC9BC,EAAAA,EAAAA,KAAA,MAAIF,UAAU,oBAAmBC,SAAEW,KACnCV,EAAAA,EAAAA,KAAA,KAAGF,UAAU,qBAAoBC,SAAEY,QAGvCX,EAAAA,EAAAA,KAACqB,EAAAA,GAAI,CAACC,GAAKT,EAAWf,UAAU,oBAAmBC,SAAC,qBAEzD,EAKX,EAxEuBwB,KACnB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,KACbhB,GAAWiB,EAAAA,EAAAA,MACjBV,QAAQC,IAAI,YAAaR,GACzBO,QAAQC,IAAI,YAAaO,GACzB,MAAOhB,EAAMmB,IAAWC,EAAAA,EAAAA,UAAS,OAC3B,QAAEC,EAAO,MAAEC,EAAK,WAAEC,EAAU,aAAEC,IAAgBC,EAAAA,EAAAA,MAGpDC,EAAAA,EAAAA,YAAU,KACNC,GAAY,GACb,CAACX,IAIJ,MAAMW,EAAYA,KACdJ,IACAC,EAAaR,GACRY,KAAKC,EAAa,EAGrBA,EAAgB7B,IAClBQ,QAAQC,IAAI,uHAAyBT,GACrCmB,EAAQnB,EAAK,EAKX8B,EAAeR,GAAQ9B,EAAAA,EAAAA,KAACuC,EAAAA,EAAY,IAAK,KACzCC,EAAUX,GAAU7B,EAAAA,EAAAA,KAACyC,EAAAA,EAAO,IAAK,KACjCrB,EAAYS,GAAWC,IAAUtB,EAAkD,MAA1CR,EAAAA,EAAAA,KAACK,EAAI,CAACG,KAAMA,EAAMC,SAAUA,IAE3E,OACIZ,EAAAA,EAAAA,MAAAqB,EAAAA,SAAA,CAAAnB,SAAA,CAEKuC,EACAE,EACApB,IACF,C","sources":["components/appBanner/AppBanner.js","components/pages/SingleCharPage.js"],"sourcesContent":["import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\n\n\nexport default AppBanner;","import { useParams, Link, useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\nimport useMyMarvelService from '../../services/MyMarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './singleCharPage.scss';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\n\r\n\r\nconst SingleCharPage = () => {\r\n    const { charId } = useParams();\r\n    const location = useLocation(); // Получаем текущий путь\r\n    console.log('location:', location);\r\n    console.log('Comic ID:', charId); \r\n    const [char, setChar] = useState(null); //данные о комиксе \r\n    const { loading, error, clearError, getCharacter} = useMyMarvelService();\r\n    \r\n    \r\n    useEffect(() => {\r\n        updateChar();\r\n    }, [charId]);\r\n\r\n    \r\n\r\n    const updateChar= () => {\r\n        clearError();\r\n        getCharacter(charId)\r\n            .then(onCharLoaded)\r\n    }\r\n\r\n    const onCharLoaded = (char) => {\r\n        console.log('Загруженный персонаж:', char);\r\n        setChar(char); \r\n    }\r\n    \r\n   \r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !char) ? <View char={char} location={location}/> : null;\r\n\r\n    return (\r\n        <>\r\n            \r\n            {errorMessage}\r\n            {spinner}\r\n            {content} \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nconst View = ({char, location}) => {\r\n    const {name, description, thumbnail } = char;\r\n    const backLink = location?.state?.from || '/'; \r\n    console.log('backLink:', backLink);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`${name} character`}\r\n                />\r\n                <title>{name}</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <div className=\"single-char\">\r\n                <img src={thumbnail} alt={name} className=\"single-char__img\"/>\r\n                <div className=\"single-char__info\">\r\n                    <h2 className=\"single-char__name\">{name}</h2>\r\n                    <p className=\"single-char__descr\">{description}</p>\r\n                    \r\n                </div>\r\n                <Link to={ backLink } className=\"single-char__back\">Back to all</Link>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default SingleCharPage;"],"names":["AppBanner","_jsxs","className","children","_jsx","src","avengers","alt","avengersLogo","View","_ref","_location$state","char","location","name","description","thumbnail","backLink","state","from","console","log","_Fragment","Helmet","content","Link","to","SingleCharPage","charId","useParams","useLocation","setChar","useState","loading","error","clearError","getCharacter","useMyMarvelService","useEffect","updateChar","then","onCharLoaded","errorMessage","ErrorMessage","spinner","Spinner"],"sourceRoot":""}