{"version":3,"file":"static/js/686.d9b5503e.chunk.js","mappings":"gNAYA,MA0CMA,EAAOC,IAAwB,IAADC,EAAA,IAAtB,MAACC,EAAK,SAAEC,GAASH,EAC3B,MAAM,MAACI,EAAK,YAAEC,EAAW,UAAEC,EAAS,UAAEC,EAAS,SAAEC,EAAQ,MAAEC,GAASP,EAC9DQ,GAAmB,OAARP,QAAQ,IAARA,GAAe,QAAPF,EAARE,EAAUQ,aAAK,IAAAV,OAAP,EAARA,EAAiBW,OAAQ,IAG1C,OAFAC,QAAQC,IAAI,YAAaJ,IAGrBK,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACIF,EAAAA,EAAAA,MAACG,EAAAA,EAAM,CAAAD,SAAA,EACHE,EAAAA,EAAAA,KAAA,QACIC,KAAK,cACLC,QAAS,GAAGjB,mBAEhBe,EAAAA,EAAAA,KAAA,SAAAF,SAAQb,QAEZe,EAAAA,EAAAA,KAACG,EAAAA,EAAS,KACVP,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,eAAcN,SAAA,EACzBE,EAAAA,EAAAA,KAAA,OAAKK,IAAKjB,EAAWkB,IAAKrB,EAAOmB,UAAU,uBAC3CR,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,qBAAoBN,SAAA,EAC/BE,EAAAA,EAAAA,KAAA,MAAII,UAAU,qBAAoBN,SAAEb,KACpCe,EAAAA,EAAAA,KAAA,KAAGI,UAAU,sBAAqBN,SAAEZ,KACpCc,EAAAA,EAAAA,KAAA,KAAGI,UAAU,sBAAqBN,SAAEX,KACpCS,EAAAA,EAAAA,MAAA,KAAGQ,UAAU,sBAAqBN,SAAA,CAAC,aAAWT,MAC9CW,EAAAA,EAAAA,KAAA,OAAKI,UAAU,sBAAqBN,SAAER,QAE1CU,EAAAA,EAAAA,KAACO,EAAAA,GAAI,CAACC,GAAKjB,EAAWa,UAAU,qBAAoBN,SAAC,qBAE1D,EAKX,EAzEwBW,KACpB,MAAM,QAAEC,IAAYC,EAAAA,EAAAA,KACd3B,GAAW4B,EAAAA,EAAAA,MACjBlB,QAAQC,IAAI,YAAaX,GACzBU,QAAQC,IAAI,YAAae,GACzB,MAAO3B,EAAO8B,IAAYC,EAAAA,EAAAA,UAAS,OAC7B,QAAEC,EAAO,MAAEC,EAAK,WAAEC,EAAU,SAAEC,IAAYC,EAAAA,EAAAA,MAGhDC,EAAAA,EAAAA,YAAU,KACNC,GAAa,GACd,CAACX,IAIJ,MAAMW,EAAaA,KACfJ,IACAC,EAASR,GACJY,KAAKC,EAAc,EAGtBA,EAAiBxC,IACnBW,QAAQC,IAAI,uHAAyBZ,GACrC8B,EAAS9B,EAAM,EAKbyC,EAAeR,GAAQhB,EAAAA,EAAAA,KAACyB,EAAAA,EAAY,IAAK,KACzCC,EAAUX,GAAUf,EAAAA,EAAAA,KAAC2B,EAAAA,EAAO,IAAK,KACjCzB,EAAYa,GAAWC,IAAUjC,EAAqD,MAA5CiB,EAAAA,EAAAA,KAACpB,EAAI,CAACG,MAAOA,EAAOC,SAAUA,IAE9E,OACIY,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,CACK0B,EACAE,EACAxB,IACF,C,uKC7CX,MAeA,EAfkBC,KAEVP,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,cAAaN,SAAA,EACxBE,EAAAA,EAAAA,KAAA,OAAKK,IAAKuB,EAAUtB,IAAI,cACxBV,EAAAA,EAAAA,MAAA,OAAKQ,UAAU,mBAAkBN,SAAA,CAAC,0BACRE,EAAAA,EAAAA,KAAA,SAAK,kBAG/BA,EAAAA,EAAAA,KAAA,OAAKK,IAAKwB,EAAcvB,IAAI,oB","sources":["components/pages/SingleComicPage.js","components/appBanner/AppBanner.js"],"sourcesContent":["import { useParams, Link, useLocation } from 'react-router-dom';\r\nimport { useState, useEffect } from \"react\";\r\nimport { Helmet } from 'react-helmet';\r\nimport useMyMarvelService from '../../services/MyMarvelService';\r\nimport Spinner from '../spinner/Spinner';\r\nimport ErrorMessage from '../errorMessage/ErrorMessage';\r\n\r\nimport './singleComicPage.scss';\r\nimport AppBanner from '../appBanner/AppBanner';\r\n\r\n\r\n\r\nconst SingleComicPage = () => {\r\n    const { comicId } = useParams();\r\n    const location = useLocation(); // Получаем текущий путь\r\n    console.log('location:', location);\r\n    console.log('Comic ID:', comicId); \r\n    const [comic, setComic] = useState(null); //данные о комиксе \r\n    const { loading, error, clearError, getComic} = useMyMarvelService();\r\n    \r\n    \r\n    useEffect(() => {\r\n        updateComic();\r\n    }, [comicId]);\r\n\r\n    \r\n\r\n    const updateComic= () => {\r\n        clearError();\r\n        getComic(comicId)\r\n            .then(onComicLoaded)\r\n    }\r\n\r\n    const onComicLoaded = (comic) => {\r\n        console.log('Загруженный персонаж:', comic);\r\n        setComic(comic); \r\n    }\r\n    \r\n   \r\n\r\n    const errorMessage = error ? <ErrorMessage/> : null;\r\n    const spinner = loading ? <Spinner/> : null;\r\n    const content = !(loading || error || !comic) ? <View comic={comic} location={location}/> : null;\r\n\r\n    return (\r\n        <>\r\n            {errorMessage}\r\n            {spinner}\r\n            {content} \r\n        </>\r\n    )\r\n    \r\n}\r\n\r\nconst View = ({comic, location}) => {\r\n    const {title, description, pageCount, thumbnail, language, price} = comic;\r\n    const backLink = location?.state?.from || '/'; \r\n    console.log('backLink:', backLink);\r\n\r\n    return (\r\n        <>\r\n            <Helmet>\r\n                <meta\r\n                    name=\"description\"\r\n                    content={`${title} comics book`}\r\n                />\r\n                <title>{title}</title>\r\n            </Helmet>\r\n            <AppBanner/>\r\n            <div className=\"single-comic\">\r\n                <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\r\n                <div className=\"single-comic__info\">\r\n                    <h2 className=\"single-comic__name\">{title}</h2>\r\n                    <p className=\"single-comic__descr\">{description}</p>\r\n                    <p className=\"single-comic__descr\">{pageCount}</p>\r\n                    <p className=\"single-comic__descr\">Language: {language}</p>\r\n                    <div className=\"single-comic__price\">{price}</div>\r\n                </div>\r\n                <Link to={ backLink } className=\"single-comic__back\">Back to all</Link>\r\n            </div>\r\n        </>\r\n        \r\n    )\r\n}\r\n\r\nexport default SingleComicPage;","import './appBanner.scss';\nimport avengers from '../../resources/img/Avengers.png';\nimport avengersLogo from '../../resources/img/Avengers_logo.png';\n\nconst AppBanner = () => {\n    return (\n        <div className=\"app__banner\">\n            <img src={avengers} alt=\"Avengers\"/>\n            <div className=\"app__banner-text\">\n                New comics every week!<br/>\n                Stay tuned!\n            </div>\n            <img src={avengersLogo} alt=\"Avengers logo\"/>\n        </div>\n    )\n}\n\n\n\nexport default AppBanner;"],"names":["View","_ref","_location$state","comic","location","title","description","pageCount","thumbnail","language","price","backLink","state","from","console","log","_jsxs","_Fragment","children","Helmet","_jsx","name","content","AppBanner","className","src","alt","Link","to","SingleComicPage","comicId","useParams","useLocation","setComic","useState","loading","error","clearError","getComic","useMyMarvelService","useEffect","updateComic","then","onComicLoaded","errorMessage","ErrorMessage","spinner","Spinner","avengers","avengersLogo"],"sourceRoot":""}